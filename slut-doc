#!/usr/bin/env node

'use strict';

var fs = require('fs');

// ================================================

var docBlockRegex = /\/\*{2,}(.|[\r\n])+?\*\//g;
var docItemRegex = /\* @(param|return|private)(.|[\r\n])+?(?=\*( @|\/))/g;
var blockDescRegex = /\/\*{2,}(.|[\r\n])+?(?=\* @)/g;

/**
* @param {String} [path = process.cwd()]
* @param {String} [extension = 'js']
* @return {Object} return
* @return {String} return.path
* @return {String} return.extension
* @return {String[]} return.files
*/
var getFiles = function (path, extension) {

    var files;
    var result = [];
    var regex;
    var i = 0;
    var max;

    path = path || process.cwd();
    extension = extension || 'js';
    regex = new RegExp('\\.' + extension + '$', 'i');
    files = fs.readdirSync(path);

    for (max = files.length; i < max; i++) {
        if (regex.test(files[i])) {
            result.push(files[i]);
        }
    }

    return {
        path: path,
        extension: extension,
        files: result
    };
};

/**
* Find blocks of documentation (doc block).
* @param {String} text
* @param {RegExp} [pattern = /\/\*{2,}.+\*\//g]
* @return {String[]}
*/
var findBlocks = function (text, pattern) {
    var blocks = [];
    pattern = pattern || docBlockRegex;

    blocks = text.match(pattern);

    return blocks || [];
};

/**
* Find the items, except description.
* @param {String} text
* @return {String[]}
*/
var findDocItems = function (text) {
    var items = text.match(docItemRegex),
        i = 0,
        max = items && items.length;

    // There's no negative lookbehind, so we have to clean
    // up some crap.
    for(; max && i < max; i++) {
        items[i] = items[i].substr(1).trim();
    }

    return items;
};

/**
* @param {String} block
* @return {String}
*/
var getBlockDescription = function (block) {
    var desc = block.match(blockDescRegex);

    // remove all the junk before and after the description
    if (desc) {
        desc = desc[0].replace(/\/\*{2,}(.|[\r\n])+?(?=[a-z])/gi, '').trim();
    }

    return desc || '';
};

// ================================================

exports.getFiles = getFiles;
exports.findBlocks = findBlocks;
exports.findDocItems = findDocItems;
exports.getBlockDescription = getBlockDescription;